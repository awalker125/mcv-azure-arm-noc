{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"envId": {
			"type": "String",
			"metadata": {
				"description": "The env id to use. This should be between 1 and 254. We use this for ports and ip addresses which is where the limitation of 1-254 comes from"
			},
			"defaultValue": 1
		},
		"envName": {
			"type": "string",
			"metadata": {
				"description": "The env name. This is used in the branch to use from github as well. So you must create a branch that matches the env name."
			}
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "The name of the Administrator of the new VM and Domain"
			},
			"defaultValue": "adAdministrator"
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "The password for the Administrator account of the new VM and Domain"
			}
		},
		"domainName": {
			"type": "string",
			"metadata": {
				"description": "The FQDN of the AD Domain created "
			}
		},
		"dnsPrefix": {
			"type": "string",
			"metadata": {
				"description": "The DNS prefix for the public IP address used by the Load Balancer"
			}
		},
		"pdcRDPPort": {
			"type": "int",
			"metadata": {
				"description": "The public RDP port for the PDC VM"
			},
			"defaultValue": 3389
		},
		"bdcRDPPort": {
			"type": "int",
			"metadata": {
				"description": "The public RDP port for the BDC VM"
			},
			"defaultValue": 13389
		},
		"_artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The location of resources, such as templates and DSC modules, that the template depends on"
			},
			"defaultValue": "https://raw.githubusercontent.com/awalker125/mcv-azure-arm-noc/"
		},
		"_artifactsLocationSasToken": {
			"type": "securestring",
			"metadata": {
				"description": "Auto-generated token to access _artifactsLocation"
			},
			"defaultValue": ""
		}
	},
	"variables": {
		"diagStorageAccountName": "[concat(parameters('envName'),parameters('envId'),uniqueString(resourceGroup().id))]",
		"storageAccountType": "Standard_LRS",
		"adPDCVMName": "[concat(parameters('envName'),parameters('envId'),'-ad1-vm')]",
		"adBDCVMName": "[concat(parameters('envName'),parameters('envId'),'-ad2-vm')]",
		"imagePublisher": "MicrosoftWindowsServer",
		"imageOffer": "WindowsServer",
		"imageSKU": "2016-Datacenter",
		"adAvailabilitySetName": "[concat(parameters('envName'),parameters('envId'),'-ad-as')]",
		"rdgwAvailabilitySetName": "[concat(parameters('envName'),parameters('envId'),'-rdgw-as')]",
		"rdcbAvailabilitySetName": "[concat(parameters('envName'),parameters('envId'),'-rdcb-as')]",
		"rdsessAvailabilitySetName": "[concat(parameters('envName'),parameters('envId'),'-rdsess-as')]",
		"publicIPAddressName": "[concat(parameters('envName'),parameters('envId'),'-ad-lb-pip')]",
		"adVMSize": "Standard_DS2_v2_Promo",
		"adLBFE": "LBFE",
		"adLBBE": "LBBE",
		"adPDCRDPNAT": "adPDCRDP",
		"adBDCRDPNAT": "adBDCRDP",
		"virtualNetworkName": "[concat(parameters('envName'),parameters('envId'),'-noc-vnet')]",
		"virtualNetworkAddressRange": "[concat('10.',parameters('envId'),'.0.0/16')]",
		"adSubnetName": "[concat(parameters('envName'),parameters('envId'),'-ad-subnet')]",
		"adSubnet": "[concat('10.',parameters('envId'),'.0.0/24')]",
		"adPDCNicName": "[concat(parameters('envName'),parameters('envId'),'-ad1-vm-nic')]",
		"adPDCNicIPAddress": "[concat('10.',parameters('envId'),'.0.4')]",
		"adBDCNicName": "[concat(parameters('envName'),parameters('envId'),'-ad2-vm-nic')]",
		"adBDCNicIPAddress": "[concat('10.',parameters('envId'),'.0.5')]",
		"adSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('adSubnetName'))]",
		"adLBName": "[concat(parameters('envName'),parameters('envId'),'-ad-lb')]",
		"adlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]",
		"adlbFEConfigID": "[concat(variables('adlbID'),'/frontendIPConfigurations/',variables('adLBFE'))]",
		"adPDCRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('adPDCRDPNAT'))]",
		"adBDCRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('adBDCRDPNAT'))]",
		"adBEAddressPoolID": "[concat(variables('adlbID'),'/backendAddressPools/',variables('adLBBE'))]",
		"adPDCDataDisk": "[concat(parameters('envName'),parameters('envId'),'-ad1-vm-data001')]",
		"adBDCDataDisk": "[concat(parameters('envName'),parameters('envId'),'-ad2-vm-data001')]",
		"adDataDiskSize": 128,
		"vnetTemplateUri": "[concat(parameters('_artifactsLocation'),parameters('envName'),parameters('envId'),'/nestedtemplates/vnet.json', parameters('_artifactsLocationSasToken'))]",
		"nicTemplateUri": "[concat(parameters('_artifactsLocation'),parameters('envName'),parameters('envId'),'/nestedtemplates/nic.json', parameters('_artifactsLocationSasToken'))]",
		"vnetwithDNSTemplateUri": "[concat(parameters('_artifactsLocation'),parameters('envName'),parameters('envId'),'/nestedtemplates/vnet-with-dns-server.json', parameters('_artifactsLocationSasToken'))]",
		"configureADBDCTemplateUri": "[concat(parameters('_artifactsLocation'),parameters('envName'),parameters('envId'),'/nestedtemplates/configureADBDC.json', parameters('_artifactsLocationSasToken'))]",
		"adPDCModulesURL": "[concat(parameters('_artifactsLocation'),parameters('envName'),parameters('envId'),'/DSC/CreateADPDC.zip', parameters('_artifactsLocationSasToken'))]",
		"adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
		"adBDCPreparationModulesURL": "[concat(parameters('_artifactsLocation'),parameters('envName'),parameters('envId'),'/DSC/PrepareADBDC.zip', parameters('_artifactsLocationSasToken'))]",
		"adBDCPreparationFunction": "PrepareADBDC.ps1\\PrepareADBDC",
		"adBDCConfigurationModulesURL": "[concat(parameters('_artifactsLocation'),parameters('envName'),parameters('envId'),'/DSC/ConfigureADBDC.zip', parameters('_artifactsLocationSasToken'))]",
		"adBDCConfigurationFunction": "ConfigureADBDC.ps1\\ConfigureADBDC"
	},
	"resources": [
		{
			"name": "[variables('adAvailabilitySetName')]",
			"type": "Microsoft.Compute/availabilitySets",
			"apiVersion": "2017-03-30",
			"location": "[resourceGroup().location]",
			"properties": {
				"PlatformUpdateDomainCount": 3,
				"PlatformFaultDomainCount": 2
			},
			"sku": {
				"name": "Aligned"
			}
		}, {
			"name": "[variables('adPDCVMName')]",
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2017-03-30",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageAccountName'))]", "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]", "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]", "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[variables('adVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[variables('adPDCVMName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[variables('imageSKU')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "[concat(variables('adPDCVMName'),'-osdisk')]",
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"name": "[concat(variables('adPDCVMName'),'-data-disk1')]",
							"caching": "None",
							"diskSizeGB": "[variables('adDataDiskSize')]",
							"lun": 0,
							"createOption": "empty"
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageUri": "[concat('https', '://', variables('diagStorageAccountName'), '.blob.core.windows.net', '/')]"
					}
				}
			},
			"resources": [
				{
					"name": "CreateADForest",
					"type": "extensions",
					"apiVersion": "2016-03-30",
					"location": "[resourceGroup().location]",
					"dependsOn": [
						"[resourceId('Microsoft.Compute/virtualMachines', variables('adPDCVMName'))]"
					],
					"properties": {
						"publisher": "Microsoft.Powershell",
						"type": "DSC",
						"typeHandlerVersion": "2.19",
						"autoUpgradeMinorVersion": true,
						"settings": {
							"ModulesUrl": "[variables('adPDCModulesURL')]",
							"ConfigurationFunction": "[variables('adPDCConfigurationFunction')]",
							"Properties": {
								"DomainName": "[parameters('domainName')]",
								"AdminCreds": {
									"UserName": "[parameters('adminUserName')]",
									"Password": "PrivateSettingsRef:AdminPassword"
								}
							}
						},
						"protectedSettings": {
							"Items": {
								"AdminPassword": "[parameters('adminPassword')]"
							}
						}
					}
				}
			]
		}, {
			"name": "[variables('adBDCVMName')]",
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2017-03-30",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageAccountName'))]", "[resourceId('Microsoft.Network/networkInterfaces',variables('adBDCNicName'))]", "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]", "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[variables('adVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[variables('adBDCVMName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[variables('imageSKU')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "[concat(variables('adBDCVMName'),'-osdisk')]",
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"name": "[concat(variables('adBDCVMName'),'-data-disk1')]",
							"caching": "None",
							"diskSizeGB": "[variables('adDataDiskSize')]",
							"lun": 0,
							"createOption": "empty"
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adBDCNicName'))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageUri": "[concat('https', '://', variables('diagStorageAccountName'), '.blob.core.windows.net', '/')]"
					}
				}
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('adBDCVMName'),'/PrepareBDC')]",
			"apiVersion": "2016-03-30",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('adBDCVMName'))]"
			],
			"properties": {
				"publisher": "Microsoft.Powershell",
				"type": "DSC",
				"typeHandlerVersion": "2.19",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"ModulesUrl": "[variables('adBDCPreparationModulesURL')]",
					"ConfigurationFunction": "[variables('adBDCPreparationFunction')]",
					"Properties": {
						"DNSServer": "[variables('adPDCNicIPAddress')]"
					}
				}
			}
		}, {
			"name": "[variables('adLBName')]",
			"type": "Microsoft.Network/loadBalancers",
			"apiVersion": "2016-10-01",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('adLBFE')]",
						"properties": {
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('adLBBE')]"
					}
				],
				"inboundNatRules": [
					{
						"name": "[variables('adPDCRDPNAT')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('adlbFEConfigID')]"
							},
							"protocol": "tcp",
							"frontendPort": "[parameters('pdcRDPPort')]",
							"backendPort": 3389,
							"enableFloatingIP": false
						}
					}, {
						"name": "[variables('adBDCRDPNAT')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('adlbFEConfigID')]"
							},
							"protocol": "tcp",
							"frontendPort": "[parameters('bdcRDPPort')]",
							"backendPort": 3389,
							"enableFloatingIP": false
						}
					}
				]
			}
		}, {
			"name": "[variables('adPDCNicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2016-10-01",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"Microsoft.Resources/deployments/VNet", "[variables('adLBName')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress": "[variables('adPDCNicIPAddress')]",
							"subnet": {
								"id": "[variables('adSubnetRef')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id": "[variables('adBEAddressPoolID')]"
								}
							],
							"loadBalancerInboundNatRules": [
								{
									"id": "[variables('adPDCRDPNATRuleID')]"
								}
							]
						}
					}
				]
			}
		}, {
			"name": "[variables('adBDCNicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2016-10-01",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"Microsoft.Resources/deployments/VNet", "[concat('Microsoft.Network/loadBalancers/',variables('adLBName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress": "[variables('adBDCNicIPAddress')]",
							"subnet": {
								"id": "[variables('adSubnetRef')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id": "[variables('adBEAddressPoolID')]"
								}
							],
							"loadBalancerInboundNatRules": [
								{
									"id": "[variables('adBDCRDPNATRuleID')]"
								}
							]
						}
					}
				]
			}
		}, {
			"name": "[variables('publicIPAddressName')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2016-10-01",
			"location": "[resourceGroup().location]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsPrefix')]"
				}
			}
		}, {
			"name": "VNet",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2016-09-01",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vnetTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"virtualNetworkName": {
						"value": "[variables('virtualNetworkName')]"
					},
					"virtualNetworkAddressRange": {
						"value": "[variables('virtualNetworkAddressRange')]"
					},
					"subnetName": {
						"value": "[variables('adSubnetName')]"
					},
					"subnetRange": {
						"value": "[variables('adSubnet')]"
					}
				}
			}
		}, {
			"name": "UpdateVNetDNS1",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2016-09-01",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('adPDCVMName'),'/extensions/CreateADForest')]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vnetwithDNSTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"virtualNetworkName": {
						"value": "[variables('virtualNetworkName')]"
					},
					"virtualNetworkAddressRange": {
						"value": "[variables('virtualNetworkAddressRange')]"
					},
					"subnetName": {
						"value": "[variables('adSubnetName')]"
					},
					"subnetRange": {
						"value": "[variables('adSubnet')]"
					},
					"DNSServerAddress": {
						"value": [
							"[variables('adPDCNicIPAddress')]"
						]
					}
				}
			}
		}, {
			"name": "UpdateBDCNIC",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/',variables('adBDCNicName'))]", "Microsoft.Resources/deployments/UpdateVNetDNS1"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('nicTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"nicName": {
						"value": "[variables('adBDCNicName')]"
					},
					"ipConfigurations": {
						"value": [
							{
								"name": "ipconfig1",
								"properties": {
									"privateIPAllocationMethod": "Static",
									"privateIPAddress": "[variables('adBDCNicIPAddress')]",
									"subnet": {
										"id": "[variables('adSubnetRef')]"
									},
									"loadBalancerBackendAddressPools": [
										{
											"id": "[variables('adBEAddressPoolID')]"
										}
									],
									"loadBalancerInboundNatRules": [
										{
											"id": "[variables('adBDCRDPNATRuleID')]"
										}
									]
								}
							}
						]
					},
					"dnsServers": {
						"value": [
							"[variables('adPDCNicIPAddress')]"
						]
					}
				}
			}
		}, {
			"name": "ConfiguringBackupADDomainController",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2016-09-01",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/',variables('adBDCVMName'),'/extensions/PrepareBDC')]", "Microsoft.Resources/deployments/UpdateBDCNIC"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('configureADBDCTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"adBDCVMName": {
						"value": "[variables('adBDCVMName')]"
					},
					"location": {
						"value": "[resourceGroup().location]"
					},
					"adminUsername": {
						"value": "[parameters('adminUsername')]"
					},
					"adminPassword": {
						"value": "[parameters('adminPassword')]"
					},
					"domainName": {
						"value": "[parameters('domainName')]"
					},
					"adBDCConfigurationFunction": {
						"value": "[variables('adBDCConfigurationFunction')]"
					},
					"adBDCConfigurationModulesURL": {
						"value": "[variables('adBDCConfigurationModulesURL')]"
					}
				}
			}
		}, {
			"name": "UpdateVNetDNS2",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2016-09-01",
			"dependsOn": [
				"Microsoft.Resources/deployments/ConfiguringBackupADDomainController"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vnetwithDNSTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"virtualNetworkName": {
						"value": "[variables('virtualNetworkName')]"
					},
					"virtualNetworkAddressRange": {
						"value": "[variables('virtualNetworkAddressRange')]"
					},
					"subnetName": {
						"value": "[variables('adSubnetName')]"
					},
					"subnetRange": {
						"value": "[variables('adSubnet')]"
					},
					"DNSServerAddress": {
						"value": [
							"[variables('adPDCNicIPAddress')]", "[variables('adBDCNicIPAddress')]"
						]
					}
				}
			}
		}, {
			"name": "[variables('diagStorageAccountName')]",
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2016-05-01",
			"location": "[resourceGroup().location]",
			"properties": "",
			"sku": {
				"name": "[variables('storageAccountType')]"
			},
			"kind": "Storage"
		}, {
			"name": "[variables('rdgwAvailabilitySetName')]",
			"type": "Microsoft.Compute/availabilitySets",
			"apiVersion": "2015-06-15",
			"location": "[resourceGroup().location]",
			"properties": {
				"PlatformUpdateDomainCount": 3,
				"PlatformFaultDomainCount": 2
			},
			"sku": {
				"name": "Aligned"
			}
		}, {
			"name": "[variables('rdcbAvailabilitySetName')]",
			"type": "Microsoft.Compute/availabilitySets",
			"apiVersion": "2015-06-15",
			"location": "[resourceGroup().location]",
			"properties": {
				"PlatformUpdateDomainCount": 3,
				"PlatformFaultDomainCount": 2
			},
			"sku": {
				"name": "Aligned"
			}
		}, {
			"name": "[variables('rdsessAvailabilitySetName')]",
			"type": "Microsoft.Compute/availabilitySets",
			"apiVersion": "2015-06-15",
			"location": "[resourceGroup().location]",
			"properties": {
				"PlatformUpdateDomainCount": 3,
				"PlatformFaultDomainCount": 2
			},
			"sku": {
				"name": "Aligned"
			}
		}
	]
}